<?php
/**
 * User: ben
 * Date: 10/4/15
 */

namespace App\Models\Relations;

use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\MorphMany;

class MulitFieldPolyMorph extends MorphMany{

    protected $customMorphType;

    public function __construct(Builder $query, Model $parent, $customMorph, $type, $id, $localKey) {
        parent::__construct($query, $parent, $type, $id, $localKey); // TODO: Change the autogenerated stub

        $this->customMorphType = $customMorph;
    }


    protected function setForeignAttributesForCreate(Model $model)
    {
        $model->{$this->getPlainForeignKey()} = $this->getParentKey();

        $model->{last(explode('.', $this->morphType))} = $this->customMorphType;
    }


    public function addConstraints()
    {
        if (static::$constraints) {
            parent::addConstraints();

            $this->query->where($this->morphType, $this->customMorphType);
        }
    }

    public function addEagerConstraints(array $models)
    {
//        parent::addEagerConstraints($models);

        $this->query->where($this->morphType, $this->customMorphType);
    }


}